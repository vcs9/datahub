{
  "type": "record",
  "name": "Ownership",
  "namespace": "com.linkedin.pegasus2avro.common",
  "doc": "Ownership information of an entity.",
  "fields": [
    {
      "name": "owners",
      "type": {
        "type": "array",
        "items": {
          "type": "record",
          "name": "Owner",
          "doc": "Ownership information",
          "fields": [
            {
              "name": "owner",
              "type": "string",
              "doc": "Owner URN, e.g. urn:li:corpuser:ldap, urn:li:corpGroup:group_name, and urn:li:multiProduct:mp_name\n(Caveat: only corpuser is currently supported in the frontend.)",
              "Relationship": {
                "entityTypes": [
                  "corpuser",
                  "corpGroup"
                ],
                "name": "OwnedBy"
              },
              "Searchable": {
                "addToFilters": true,
                "fieldName": "owners",
                "fieldType": "URN",
                "filterNameOverride": "Owned By",
                "hasValuesFieldName": "hasOwners",
                "queryByDefault": false
              },
              "java": {
                "class": "com.linkedin.pegasus2avro.common.urn.Urn"
              }
            },
            {
              "name": "type",
              "type": {
                "type": "enum",
                "name": "OwnershipType",
                "doc": "Asset owner types",
                "symbols": [
                  "TECHNICAL_OWNER",
                  "BUSINESS_OWNER",
                  "DATA_STEWARD",
                  "NONE",
                  "DEVELOPER",
                  "DATAOWNER",
                  "DELEGATE",
                  "PRODUCER",
                  "CONSUMER",
                  "STAKEHOLDER"
                ],
                "symbolDocs": {
                  "BUSINESS_OWNER": "A person or group who is responsible for logical, or business related, aspects of the asset.",
                  "CONSUMER": "A person, group, or service that consumes the data\nDeprecated! Use TECHNICAL_OWNER or BUSINESS_OWNER instead.",
                  "DATAOWNER": "A person or group that is owning the data\nDeprecated! Use TECHNICAL_OWNER instead.",
                  "DATA_STEWARD": "A steward, expert, or delegate responsible for the asset.",
                  "DELEGATE": "A person or a group that overseas the operation, e.g. a DBA or SRE.\nDeprecated! Use TECHNICAL_OWNER instead.",
                  "DEVELOPER": "A person or group that is in charge of developing the code\nDeprecated! Use TECHNICAL_OWNER instead.",
                  "NONE": "No specific type associated to the owner.",
                  "PRODUCER": "A person, group, or service that produces/generates the data\nDeprecated! Use TECHNICAL_OWNER instead.",
                  "STAKEHOLDER": "A person or a group that has direct business interest\nDeprecated! Use TECHNICAL_OWNER, BUSINESS_OWNER, or STEWARD instead.",
                  "TECHNICAL_OWNER": "person or group who is responsible for technical aspects of the asset."
                },
                "deprecatedSymbols": {
                  "CONSUMER": true,
                  "DATAOWNER": true,
                  "DELEGATE": true,
                  "DEVELOPER": true,
                  "PRODUCER": true,
                  "STAKEHOLDER": true
                }
              },
              "doc": "The type of the ownership"
            },
            {
              "name": "source",
              "type": [
                "null",
                {
                  "type": "record",
                  "name": "OwnershipSource",
                  "doc": "Source/provider of the ownership information",
                  "fields": [
                    {
                      "name": "type",
                      "type": {
                        "type": "enum",
                        "name": "OwnershipSourceType",
                        "symbols": [
                          "AUDIT",
                          "DATABASE",
                          "FILE_SYSTEM",
                          "ISSUE_TRACKING_SYSTEM",
                          "MANUAL",
                          "SERVICE",
                          "SOURCE_CONTROL",
                          "OTHER"
                        ],
                        "symbolDocs": {
                          "AUDIT": "Auditing system or audit logs",
                          "DATABASE": "Database, e.g. GRANTS table",
                          "FILE_SYSTEM": "File system, e.g. file/directory owner",
                          "ISSUE_TRACKING_SYSTEM": "Issue tracking system, e.g. Jira",
                          "MANUAL": "Manually provided by a user",
                          "OTHER": "Other sources",
                          "SERVICE": "Other ownership-like service, e.g. Nuage, ACL service etc",
                          "SOURCE_CONTROL": "SCM system, e.g. GIT, SVN"
                        }
                      },
                      "doc": "The type of the source"
                    },
                    {
                      "name": "url",
                      "type": [
                        "null",
                        "string"
                      ],
                      "doc": "A reference URL for the source",
                      "default": null
                    }
                  ]
                }
              ],
              "doc": "Source information for the ownership",
              "default": null
            }
          ]
        }
      },
      "doc": "List of owners of the entity."
    },
    {
      "name": "lastModified",
      "type": {
        "type": "record",
        "name": "AuditStamp",
        "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage.",
        "fields": [
          {
            "name": "time",
            "type": "long",
            "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."
          },
          {
            "name": "actor",
            "type": "string",
            "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change.",
            "java": {
              "class": "com.linkedin.pegasus2avro.common.urn.Urn"
            }
          },
          {
            "name": "impersonator",
            "type": [
              "null",
              "string"
            ],
            "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor.",
            "default": null,
            "java": {
              "class": "com.linkedin.pegasus2avro.common.urn.Urn"
            }
          }
        ]
      },
      "doc": "Audit stamp containing who last modified the record and when. A value of 0 in the time field indicates missing data.",
      "default": {
        "actor": "urn:li:corpuser:unknown",
        "impersonator": null,
        "time": 0
      }
    }
  ],
  "Aspect": {
    "name": "ownership"
  }
}